@model ISPROJ2VetSeeker.Models.UserModel
@using CaptchaMvc.HtmlHelpers;

@{ ViewBag.Title = "Create"; }

@Styles.Render("~/Content/StyleSheetRegister.css")
<link href="~/Content/StyleSheetRegister.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        $('select#TypeID').change(function () {
            swal("If registering as a Veterinarian, please send us an image of your license of practice for verification to this EMAIL ADDRESS: VetSeeker@gmail.com");
        });
    });
</script>

@using (Html.BeginForm("Register", "User", FormMethod.Post, new { enctype = "multipart/form-data", @name = "image" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <br />
        <br />
        <br />
        <h2 style="text-align:center">Create Account</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container">
            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TypeID,
                                        new SelectList(Model.Types, "TypeID", "Type"),
                                        "Select from the list...", new { @class = "form-control" })
                        @if (Html.Captcha(5) != null)
                        {
                        }
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label", style = "margin-right:65px" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label", style = "margin-right:65px" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", placeholder = "ex: 09179999999" } })
                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label", style = "margin-right:40px" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.confirmPassword, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <!--Drop Down List for cities-->
                    @{ List<SelectListItem> listQuestions = new List<SelectListItem>();
                        listQuestions.Add(new SelectListItem { Text = "Where were you born?" });
                        listQuestions.Add(new SelectListItem { Text = "What is the name of your first pet?" });
                        listQuestions.Add(new SelectListItem { Text = "Where did you go to highschool?" });
                        listQuestions.Add(new SelectListItem { Text = "What is your mother's maiden name?" });
                        listQuestions.Add(new SelectListItem { Text = "What is your favorite restaurant?" }); }
                    @Html.LabelFor(model => model.SecurityQuestion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="padding-top:8px">
                        @Html.DropDownListFor(model => model.SecurityQuestion, listQuestions, "Select a Question", new { htmlAttributes = new { @class = "form-control" }, style = "width:225px;font-size:15px;float:left;", required = "required" })
                        @Html.ValidationMessageFor(model => model.SecurityQuestion, "", new { @class = "text-danger", style = "float:left" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SecurityAnswer, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SecurityAnswer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SecurityAnswer, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-lg-4">

                <div class="form-group">
                    @Html.LabelFor(model => model.ProfilePicture, htmlAttributes: new { @class = "control-label", style = "margin-right:50px" })
                    <div class="col-md-10">
                        <input id="ProfilePicture" title="Upload a product image"
                               type="file" name="file" accept="image/*" onchange="validateFileType()" />
                        <script type="text/javascript">
                            function validateFileType() {
                                var ProfilePicture = document.getElementById("ProfilePicture").value;
                                var idxDot = ProfilePicture.lastIndexOf(".") + 1;
                                var extFile = ProfilePicture.substr(idxDot, ProfilePicture.length).toLowerCase();
                                if (extFile == "jpg" || extFile == "jpeg" || extFile == "png") {
                                    //TO DO
                                } else {
                                    swal("Only .JPG/JPEG and .PNG files are accepted");
                                    document.getElementById("ProfilePicture").value = "";
                                }
                            }
                        </script>
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $('#ProfilePicture').on('change', function () {
                                    for (var i = 0; i < $(this).get(0).files.length; ++i) {
                                        var file1 = $(this).get(0).files[i].size;
                                        if (file1) {
                                            var file_size = $(this).get(0).files[i].size;
                                            if (file_size > 1000000) {
                                                swal("File size must not be larger than 1 MB");
                                                document.getElementById("ProfilePicture").value = "";
                                            } else {
                                                $('#error-message').css("display", "none");
                                            }
                                        }
                                    }
                                });
                            });
                        </script>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="font-size:17px; text-align:left">
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } }) Male
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } }) Female
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Birthday, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control",
                                @type = "date",
                                @Value = DateTime.Now.ToString("yyyy'-'MM'-'dd")
                   }
                        })
                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                        <input type="hidden" id="custID" runat="server" name="custId">
                    </div>
                </div>

                <div class="form-group">
                    <!--Drop Down List for cities-->
                    @{ List<SelectListItem> listItems = new List<SelectListItem>();
                        listItems.Add(new SelectListItem { Text = "Makati" });
                        listItems.Add(new SelectListItem { Text = "Manila" });
                        listItems.Add(new SelectListItem { Text = "Quezon City" });
                        listItems.Add(new SelectListItem { Text = "Caloocan" });
                        listItems.Add(new SelectListItem { Text = "Pasay" });
                        listItems.Add(new SelectListItem { Text = "Pasig" });
                        listItems.Add(new SelectListItem { Text = "Taguig" });
                        listItems.Add(new SelectListItem { Text = "Navotas" });
                        listItems.Add(new SelectListItem { Text = "Muntinlupa" });
                        listItems.Add(new SelectListItem { Text = "Mandaluyong" });
                        listItems.Add(new SelectListItem { Text = "Valenzuela" });
                        listItems.Add(new SelectListItem { Text = "Malabon" });
                        listItems.Add(new SelectListItem { Text = "San Juan" });
                        listItems.Add(new SelectListItem { Text = "Marikina" });
                        listItems.Add(new SelectListItem { Text = "Pateros" });
                        listItems.Add(new SelectListItem { Text = "Paranaque" });
                        listItems.Add(new SelectListItem { Text = "Bonifacio Global City" }); }
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="padding-top:8px">
                        @Html.DropDownListFor(model => model.City, listItems, "Select a City", new { htmlAttributes = new { @class = "form-control" }, style = "width:225px;font-size:15px;float:left;", required = "required" })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger", style = "float:left" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UnitHouseNo, htmlAttributes: new { @class = "control-label", style = "margin-right:40px" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UnitHouseNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnitHouseNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Baranggay, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Baranggay, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Baranggay, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-8">
                        @Html.Captcha(5)
                    </div>
                </div>
                <!--Date Added and Date Modified-->


            </div>

            <div class="col-lg-1"></div>

            <div class="form-group">
                <div class="col-md-8">
                    @if (@Html.Captcha(5) != null)
                    {
                        <script type="text/javascript">
                            window.onsubmit = function () {
                                alert("If you are redirected to login page, your account was CREATED SUCCESFULLY, if not, your email already EXISTS or your CAPTCHA was inputted incorrectly")
                            }
                        </script>
                    }
                    <div class="privacy">
                            <p>
                                <input type="checkbox" id="policy" value="Privacy Policy" required="required" onclick="ageChecker()" />
                                I have read and agree to the @Html.ActionLink("Terms of Service and Privacy Policy ", "Index", "Home", null, new { target = "_blank" })
                            <p id="ageCheck" style="display:none; color:red;">Please note if you are below 18, consent for visiting the Clinic alone from a parent/guardian is strongly advised.</p>
                            <script>
                                function ageChecker() {
                                    // Get the checkbox
                                    var checkBox = document.getElementById("policy");
                                    // Get the output text
                                    var text = document.getElementById("ageCheck");

                                    // If the checkbox is checked, display the output text
                                    if (checkBox.checked == true) {
                                        text.style.display = "block";
                                    } else {
                                        text.style.display = "none";
                                    }
                                }
                            </script>
                            </p>
                        </div>
                    <input name="register" type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}