@model ISPROJ2VetSeeker.Models.UserModel

@{ ViewBag.Title = "UpdateUserProfile"; }
@if (Model.TypeID == 1)
{
    Layout = "~/Views/Shared/_LayoutClient.cshtml";
}
else if (Model.TypeID == 2)
{
    Layout = "~/Views/Shared/_LayoutVet.cshtml";
}
@Styles.Render("~/Content/StyleSheetPetRegister.css")

@using (Html.BeginForm("UpdateUserProfile", "User", FormMethod.Post, new { enctype = "multipart/form-data", @name = "image" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <br />
        <br />
        <br />
        <h2 style="text-align:center">Update Account</h2>
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container">
            <div class="col-lg-4">

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label", style = "margin-right:65px" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.FirstName, new { disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label", style = "margin-right:65px" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.LastName, new { disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label", style = "margin-right:40px" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.confirmPassword, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-lg-5">

                <div class="form-group">
                    @Html.LabelFor(model => model.ProfilePicture, htmlAttributes: new { @class = "control-label", style = "margin-right:90px" })
                    <div class="col-md-10">
                        <input id="ProfilePicture" title="Upload a product image"
                               type="file" name="file" />
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="font-size:17px; text-align:left">
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control", required = "required" } }) Male
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control", required = "required" } }) Female
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UnitHouseNo, htmlAttributes: new { @class = "control-label", style = "margin-right:80px" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UnitHouseNo, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.UnitHouseNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Baranggay, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Baranggay, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Baranggay, "", new { @class = "text-danger" })
                    </div>
                </div>
                @Html.HiddenFor(model => model.UserID)
                @Html.HiddenFor(model => model.TypeID)


            </div>

            <div class="col-lg-1"></div>

            <div class="form-group">
                <div class="col-md-8">
                    <input type="submit" value="Update Profile" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}